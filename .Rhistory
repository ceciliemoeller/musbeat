rawGMSI <- rawGMSI[!is.na(rawGMSI$GMSI_Q1),]
#Exclude > 120 year olds                  N = 1239-1= 1238
rawGMSI <- rawGMSI[!rawGMSI$age>120,]
#Save file before IRV exclusions
cleaned<-rawGMSI
# Exclude irv-scores <.5
# THIS IS THE FINAL N
rawGMSI <- rawGMSI[rawGMSI$irv>0.5,]
# and add simple participant id
rawGMSI$ID.order<-1:nrow(rawGMSI)
# bin age variable
rawGMSI<-
rawGMSI %>%  mutate(agegroup = case_when(age >= 18  & age <= 19 ~ '<=19',
age >= 20  & age <= 24 ~ '20-24',
age >= 25  & age <= 29 ~ '25-29',
age >= 30  & age <= 34 ~ '30-34',
age >= 35  & age <= 39 ~ '35-39',
age >= 40  & age <= 44 ~ '40-44',
age >= 45  & age <= 49 ~ '45-49',
age >= 50  & age <= 54 ~ '50-54',
age >= 55  & age <= 59 ~ '55-59',
age >= 60  & age <= 64 ~ '60-64',
age >= 65  & age <= 69 ~ '65-69',
age >= 70  & age <= 120 ~ '>=70'
))
# reorder columns
rawGMSI <- rawGMSI[, c( 1,2, 52,3, c(4:51))]
View(rawGMSI)
View(rawGMSI)
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
if (rawGMSI$education_completed=="Stadig under uddannelse" & !rawGMSI$agegroup=="<=19" & rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
if (rawGMSI$education_completed=="Stadig under uddannelse" && !rawGMSI$agegroup=="<=19" && rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
if (rawGMSI$education_completed=="Stadig under uddannelse" && !rawGMSI$agegroup=="<=19" && rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
rawGMSI$education_completed-rc=="gym"
rawGMSI$education_completed=="gym"
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<-if (rawGMSI$education_completed=="Stadig under uddannelse" && rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<-if (rawGMSI$education_completed=="Stadig under uddannelse" && rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
test<- test
if (rawGMSI$education_completed=="Stadig under uddannelse" && rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test
if (rawGMSI$education_completed=="Stadig under uddannelse" && rawGMSI$education_expected=="Lang videregående uddannelse (min. 5 år)"){
rawGMSI$education_completed=="gym"
}
View(test)
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(RC = case_when(education_completed=="Stadig under uddannelse" & education_expected=="Lang videregående uddannelse (min. 5 år)" ~ 'gym'
))
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc = case_when(education_completed=="Stadig under uddannelse" & education_expected=="Lang videregående uddannelse (min. 5 år)" & !rawGMSI$agegroup=="<=19"  ~ 'gym'
))
test <- test[, 53,c(1:52)]
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc = case_when(education_completed=="Stadig under uddannelse" & education_expected=="Lang videregående uddannelse (min. 5 år)" & !rawGMSI$agegroup=="<=19"  ~ 'gym'
))
test <- test[, 53,c(1:52)]
test <- test[, c(53,c(1:52))]
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc = case_when(education_completed=="Stadig under uddannelse" & education_expected=="Lang videregående uddannelse (min. 5 år)" & !rawGMSI$agegroup=="<=19"  ~ 'gym'
))
test <- test[, c(53,c(1:52))]
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc = case_when(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse" & !rawGMSI$agegroup=="<=19"  ~ 'gym'
))
test <- test[, c(53,c(1:52))]
sum(test[test$edu_comp_rc])
sum(test[test$edu_comp_rc=="gym"])
sum(test[test$edu_comp_rc=="gym",])
sum(test[test$edu_comp_rc=="gym"],)
sum(test$edu_comp_rc=="gym",)
Still_edu<-
sum(rawGMSI$education_completed == "Stadig under uddannelse")
rc<-sum(test$edu_comp_rc=="gym")
class(rawGMSI$education_completed == "Stadig under uddannelse")
class(test$edu_comp_rc=="gym")
Still_edu<-
sum(rawGMSI$education_completed == "Stadig under uddannelse")
rc<-
sum(test$edu_comp_rc=="gym")
rc<-
sum(test$edu_comp_rc == "gym")
rc
# INITIALIZE
library(jsonlite)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
# SET WORKING DIRECTORY
setwd("C:/Users/au213911/Documents/musbeat")
# LIST FILES IN WORKING DIRECTORY (ignoring folders and recursives)
files <- setdiff(list.files(paste0(getwd(),"/results/pilot_I_results/results"),include.dirs=F,all.files=F),list.dirs(paste0(getwd(),"/results/pilot_I_results/results"),full.names=F))
files <- files[grep(".rds$",files)]
names(files) <- basename(files)
addUniqueID <- ldply(files)
# CREATE OUTPUT FILE
output <- data.frame(id=character(),
stringsAsFactors=F)
for (i in 1:length(files)) {
results <- readRDS(paste0(getwd(),"/results/pilot_I_results/results/",files[i]))
output[i,"id"] <- results$session$p_id
output[i,"complete"] <- results$session$complete
output[i,"currentTime"] <- results$session$current_time
output[i,"startTime"] <- results$session$time_started
output[i,"device"] <- results$results$device
output[i,"browser"] <- results$results$browser
output[i,"headphones"] <- results$results$headphones
if ("age"%in%names(results$results)) {
output[i,"age"] <- results$results$age
output[i,"gender"] <- results$results$gender
}
if ("language"%in%names(results$results)) {
output[i,"residence"] <- results$results$residence
output[i,"youth_country"] <- results$results$youth_country
output[i,"language"] <- results$results$language
}
if ("ollen"%in%names(results$results)) {
output[i,"ollen"] <- results$results$ollen
}
if ("years_instr_1"%in%names(results$results)) {
output[i,"MT_06"] <- results$results$MT_06
output[i,"genre"] <- results$results$genre
output[i,"instrument_1"] <- results$results$instrument_1
output[i,"hours_instr_1"] <- results$results$hours_instr_1
output[i,"years_instr_1"] <- results$results$years_instr_1
output[i,"reg_play_1"] <- results$results$reg_play_1
output[i,"instrument_2"] <- results$results$instrument_2
}
if ("years_instr_2"%in%names(results$results)) {
output[i,"hours_instr_2"] <- results$results$hours_instr_2
output[i,"years_instr_2"] <- results$results$years_instr_2
output[i,"reg_play_2"] <- results$results$reg_play_2
output[i,"instrument_3"] <- results$results$instrument_3
}
if ("years_instr_3"%in%names(results$results)) {
output[i,"hours_instr_3"] <- results$results$hours_instr_3
output[i,"years_instr_3"] <- results$results$years_instr_3
output[i,"reg_play_3"] <- results$results$reg_play_3
output[i,"other_instr"] <- results$results$other_instr
}
if ("duplets"%in%names(results$results)) {
output[i,"duplets"] <- results$results$duplets
}
if ("comments"%in%names(results$results)) {
output[i,"comments"] <- results$results$comments
}
if ("poly_pitch"%in%names(results$results)) {
# make js data into dataframe
jsdata<- fromJSON(results$results$poly_pitch)
#look in first row of the dataframe to see which condition (pitch/tempo/ratio) this participant was in and paste into output
output[i,"experiment"]<-jsdata$stimulus[1]
# extract relevant rows, i.e. only those containing tapping data
tapping_all <- subset(jsdata, trial_type== "audio-bpm-button-response")
# save spontaneous taps (which are in the first column) in the output file
output[i,"spontaneous_taps"]<-tapping_all$rt[1]
#remove spontaneous taps (duplicate column name)
tapping <- subset(tapping_all, stimulus!= "sounds/spontaneous_tap_15s.mp3")
#  # Add block number column and append block and (important bits of) stimulus names in the column "stim"
tapping$block[tapping$trial_index==5|tapping$trial_index==7|tapping$trial_index==9|tapping$trial_index==11|tapping$trial_index==13|tapping$trial_index==15|tapping$trial_index==17|tapping$trial_index==19]  <- "B1"
tapping$block[tapping$trial_index==22|tapping$trial_index==24|tapping$trial_index==26|tapping$trial_index==28|tapping$trial_index==30|tapping$trial_index==32|tapping$trial_index==34|tapping$trial_index==36]  <- "B2"
tapping$stimulus<- gsub("^.{0,13}", "", tapping$stimulus)
tapping$stimulus  = substr(tapping$stimulus,1,nchar(tapping$stimulus)-4)
tapping$stim <- paste(tapping$block, tapping$stimulus, sep="_")
#  ##############
# and restructure
reshaped <- t(tapping)
# Extract stimulus names
conds<-reshaped['stim',]
# conds<-paste(reshaped['stimulus',], reshaped['trial_index',], sep="_")
# conds<-reshaped['stim',]
# extract taps
taps<-reshaped['rt',]
# and paste the taps into the column in output which is named according to conds (stimulus name)
output[i,conds]<-taps
########################################################################
# # extract stimulus presentation order and ratings
#
#     tr_ind<-reshaped['trial_index',]
#     stim<-reshaped['stimulus',]
#     output[i,tr_ind]<-stim
#
#     rating<-subset(jsdata, trial_type=="html-slider-response")
#     t_rating <- t(rating)
#
#     tr_ind<-t_rating['trial_index',]
#     verdict<-t_rating['response',]
#     output[i,tr_ind]<-verdict
}
}
output <- bind_cols(addUniqueID, output)
output$id <-output$.id
output<- output%>% select(-.id,-V1 )
# rename values in "experiment" to show which of the three experiments the dataset belongs to
output$experiment <- gsub("sounds/pitch/poly_pitch_marimba_loudness.mp3", "pitch", output$experiment)
###########################################################################
# This script extracts data from the pitch-polyrhythm study               #
#                                                                         #                                                                       #
#                                                                         #
# Date: March 2022                                                        #
# Author: Cecilie Møller                                                  #
# Project group: above + Jan Stupacher, Alexandre Celma-Miralles,         #
# Peter Vuust                                                             #
###########################################################################
# install.packages("jsonlite")
# install.packages("plyr")
# install.packages("dplyr")
# install.packages("ggplot2")
# INITIALIZE
library(jsonlite)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
# SET WORKING DIRECTORY
setwd("C:/Users/au213911/Documents/musbeat")
# LIST FILES IN WORKING DIRECTORY (ignoring folders and recursives)
files <- setdiff(list.files(paste0(getwd(),"/results/pilot_I_results/results"),include.dirs=F,all.files=F),list.dirs(paste0(getwd(),"/results/pilot_I_results/results"),full.names=F))
files <- files[grep(".rds$",files)]
names(files) <- basename(files)
addUniqueID <- ldply(files)
# CREATE OUTPUT FILE
output <- data.frame(id=character(),
stringsAsFactors=F)
for (i in 1:length(files)) {
results <- readRDS(paste0(getwd(),"/results/pilot_I_results/results/",files[i]))
output[i,"id"] <- results$session$p_id
output[i,"complete"] <- results$session$complete
output[i,"currentTime"] <- results$session$current_time
output[i,"startTime"] <- results$session$time_started
output[i,"device"] <- results$results$device
output[i,"browser"] <- results$results$browser
output[i,"headphones"] <- results$results$headphones
if ("age"%in%names(results$results)) {
output[i,"age"] <- results$results$age
output[i,"gender"] <- results$results$gender
}
if ("language"%in%names(results$results)) {
output[i,"residence"] <- results$results$residence
output[i,"youth_country"] <- results$results$youth_country
output[i,"language"] <- results$results$language
}
if ("ollen"%in%names(results$results)) {
output[i,"ollen"] <- results$results$ollen
}
if ("years_instr_1"%in%names(results$results)) {
output[i,"MT_06"] <- results$results$MT_06
output[i,"genre"] <- results$results$genre
output[i,"instrument_1"] <- results$results$instrument_1
output[i,"hours_instr_1"] <- results$results$hours_instr_1
output[i,"years_instr_1"] <- results$results$years_instr_1
output[i,"reg_play_1"] <- results$results$reg_play_1
output[i,"instrument_2"] <- results$results$instrument_2
}
if ("years_instr_2"%in%names(results$results)) {
output[i,"hours_instr_2"] <- results$results$hours_instr_2
output[i,"years_instr_2"] <- results$results$years_instr_2
output[i,"reg_play_2"] <- results$results$reg_play_2
output[i,"instrument_3"] <- results$results$instrument_3
}
if ("years_instr_3"%in%names(results$results)) {
output[i,"hours_instr_3"] <- results$results$hours_instr_3
output[i,"years_instr_3"] <- results$results$years_instr_3
output[i,"reg_play_3"] <- results$results$reg_play_3
output[i,"other_instr"] <- results$results$other_instr
}
if ("duplets"%in%names(results$results)) {
output[i,"duplets"] <- results$results$duplets
}
if ("comments"%in%names(results$results)) {
output[i,"comments"] <- results$results$comments
}
if ("poly_pitch"%in%names(results$results)) {
# make js data into dataframe
jsdata<- fromJSON(results$results$poly_pitch)
#look in first row of the dataframe to see which condition (pitch/tempo/ratio) this participant was in and paste into output
output[i,"experiment"]<-jsdata$stimulus[1]
# extract relevant rows, i.e. only those containing tapping data
tapping_all <- subset(jsdata, trial_type== "audio-bpm-button-response")
# save spontaneous taps (which are in the first column) in the output file
output[i,"spontaneous_taps"]<-tapping_all$rt[1]
#remove spontaneous taps (duplicate column name)
tapping <- subset(tapping_all, stimulus!= "sounds/spontaneous_tap_15s.mp3")
#  # Add block number column and append block and (important bits of) stimulus names in the column "stim"
tapping$block[tapping$trial_index==5|tapping$trial_index==7|tapping$trial_index==9|tapping$trial_index==11|tapping$trial_index==13|tapping$trial_index==15|tapping$trial_index==17|tapping$trial_index==19]  <- "B1"
tapping$block[tapping$trial_index==22|tapping$trial_index==24|tapping$trial_index==26|tapping$trial_index==28|tapping$trial_index==30|tapping$trial_index==32|tapping$trial_index==34|tapping$trial_index==36]  <- "B2"
tapping$stimulus<- gsub("^.{0,13}", "", tapping$stimulus)
tapping$stimulus  = substr(tapping$stimulus,1,nchar(tapping$stimulus)-4)
tapping$stim <- paste(tapping$block, tapping$stimulus, sep="_")
#  ##############
# and restructure
reshaped <- t(tapping)
# Extract stimulus names
conds<-reshaped['stim',]
# conds<-paste(reshaped['stimulus',], reshaped['trial_index',], sep="_")
# conds<-reshaped['stim',]
# extract taps
taps<-reshaped['rt',]
# and paste the taps into the column in output which is named according to conds (stimulus name)
output[i,conds]<-taps
########################################################################
# # extract stimulus presentation order and ratings
#
#     tr_ind<-reshaped['trial_index',]
#     stim<-reshaped['stimulus',]
#     output[i,tr_ind]<-stim
#
#     rating<-subset(jsdata, trial_type=="html-slider-response")
#     t_rating <- t(rating)
#
#     tr_ind<-t_rating['trial_index',]
#     verdict<-t_rating['response',]
#     output[i,tr_ind]<-verdict
}
}
output <- bind_cols(addUniqueID, output)
output$id <-output$.id
output<- output%>% select(-.id,-V1 )
# rename values in "experiment" to show which of the three experiments the dataset belongs to
View(jsdata)
View(output)
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc = case_when(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse" & !rawGMSI$agegroup=="<=19"  ~ 'gym'
))
test <- test[, c(53,c(1:52))]
?mutate
?mutate
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc= education_completed)
test <- test[, c(53,c(1:52))]
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
test<-rawGMSI
test<- test %>%
mutate(edu_comp_rc= education_completed)%>%
mutate(edu_comp_rc = case_when(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse" & !rawGMSI$agegroup=="<=19"  ~ 'gym'
))
test <- test[, c(53,c(1:52))]
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=education_completed, fill=employment), binwidth = 0.1)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=employment), binwidth = 0.1)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=employment), binwidth = 1)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=employment), binwidth = 1)+
facet_wrap(education_completed)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=employment), binwidth = 1)+
facet_wrap(~education_completed)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=education_completed), binwidth = 1)+
facet_wrap(~employment)
nrow(test$education_completed=="Stadig under uddannelse")
nrow(test$education_completed=="Ledig")
nrow(test$employment=="Studerende på videregående uddannelse")
class(employment=="Studerende på videregående uddannelse")
class(test$employment=="Studerende på videregående uddannelse")
sum(test$employment=="Studerende på videregående uddannelse", na.rm = TRUE)
sum(test$employment=="Studerende på videregående uddannelse")
sum(test$education_completed=="Stadig under uddannelse")
sum(test$education_completed=="Stadig under uddannelse"&&test$employment=="Studerende på videregående uddannelse")
sum(test$education_completed=="Stadig under uddannelse"& test$employment=="Studerende på videregående uddannelse")
still_edu<-
sum(rawGMSI$education_completed == "Stadig under uddannelse")
sum(test$education_completed=="Stadig under uddannelse" & test$employment=="Studerende på videregående uddannelse")
st_edu_stud_vid<-sum(test$education_completed=="Stadig under uddannelse" & test$employment=="Studerende på videregående uddannelse")
116-89
stud_vid<-sum(test$employment=="Studerende på videregående uddannelse")
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
#Det virker - skriv det op!
still_edu<- sum(rawGMSI$education_completed == "Stadig under uddannelse")
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
#Det virker - skriv det op!
still_edu<- sum(test$education_completed == "Stadig under uddannelse")
# recode participants who stated "still in education" and who are >= 20 into "gymnasium
#Det virker - skriv det op!
still_edu<- sum(rawGMSI$education_completed == "Stadig under uddannelse")
st_edu_stud_vid<-sum(rawGMSIt$education_completed=="Stadig under uddannelse" & rawGMSI$employment=="Studerende på videregående uddannelse")
st_edu_stud_vid<-sum(rawGMSI$education_completed=="Stadig under uddannelse" & rawGMSI$employment=="Studerende på videregående uddannelse")
stud_vid<-sum(rawGMSI$employment=="Studerende på videregående uddannelse")
test<-rawGMSI
test<-rawGMSI
test<- test %>%
mutate(edu_compl_rc= education_completed)%>%
mutate(edu_compl_rc = case_when(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse"  ~ "Gymnasial uddannelse (fx gymnasium, HF, HTX, HHX)"
))
test <- test[, c(53,c(1:52))]
test<-rawGMSI
test<- test %>%
mutate(edu_compl_rc= education_completed)%>%
# mutate(edu_compl_rc = case_when(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse"  ~ "Gymnasial uddannelse (fx gymnasium, HF, HTX, HHX)"
# ))
test <- test[, c(53,c(1:52))]
test<-rawGMSI
test<- test %>%
mutate(edu_compl_rc= education_completed)#%>%
# mutate(edu_compl_rc = case_when(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse"  ~ "Gymnasial uddannelse (fx gymnasium, HF, HTX, HHX)"
# ))
test <- test[, c(53,c(1:52))]
recode_if <- function(x, condition, ...) {
if_else(condition, recode(x, ...), x)
}
'test<-rawGMSI
test<- test %>%
mutate(edu_compl_rc= education_completed)%>%
mutate(edu_compl_rc = recode_if(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse", "Stadig under uddannelse"="Gymnasial uddannelse (fx gymnasium, HF, HTX, HHX)"
))
test <- test[, c(53,c(1:52))]
su<- sum(test$edu_compl_rc == "Stadig under uddannelse")
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=education_completed), binwidth = 1)+
facet_wrap(~employment)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
geom_histogram(mapping=aes(x=age, fill=education_completed), binwidth = 1)+
facet_wrap(~employment)
test%>%
# subs75_rawGMSI%>%
ggplot()+
ggtitle("suu by stud.vid by age")+
# ggtitle("Age - excluding 75% of 18-26 year olds (n = 780)")+
test<-rawGMSI
test<- test %>%
mutate(edu_compl_rc= education_completed)%>%
mutate(edu_compl_rc = recode_if(education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse", "Stadig under uddannelse"="Gymnasial uddannelse (fx gymnasium, HF, HTX, HHX)"
))
test <- test[, c(53,c(1:52))]
test<-rawGMSI
test<- test %>%
mutate(edu_compl_rc= education_completed)%>%
mutate(edu_compl_rc = recode_if(edu_compl_rc,education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse", "Stadig under uddannelse"= "Gymnasial uddannelse (fx gymnasium, HF, HTX, HHX)"
))
test <- test[, c(53,c(1:52))]
test<-rawGMSI
test <- test %>%
mutate(edu_compl_rc = recode_if(edu_compl_rc, education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse", "Stadig under uddannelse" = "test"))
test <- test[, c(53,c(1:52))]
test<-rawGMSI
test <- test %>%
mutate(edu_compl_rc = recode_if(edu_compl_rc, education_completed=="Stadig under uddannelse" & employment=="Studerende på videregående uddannelse", "Stadig under uddannelse" = "test"))
test<-rawGMSI
test<-rawGMSI
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
View(test)
