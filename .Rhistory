geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_bcg, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_bcg, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=mean_bre),outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab("d'")+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12,face="italic"),
panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.y=element_blank())+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
# scale_colour_brewer(palette = "Greys")+
# scale_fill_brewer(palette = "Greys")+ # getting close, men den skal jo lige kunne ses...
ggtitle('b   Bimodal Compatibility Gain **')+
stat_compare_means(comparisons = c("Musicians", "Non-musicians"), label.y = 2.5)
BCG_rain
plot_grid(PDT_rain, BCG_rain, rel_widths= c(1.3, 1))
#plot_grid(PDT_rain, BCG_rain, labels = "AUTO", align= "v", hjust=c(-0.5, -3.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", hjust=c(-0.5, -0.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", label_x = 0.2)
ggsave("figure1.jpg", dpi=900)
ggsave("figure1.pdf")
citation("ggplot2")
citation("dplyr")
citation("plyr")
citation("devtools")
citation("tidyverse")
citation("ggpubr")
citation("rstatix")
citation("cowplot")
# BCG <- ggplot(my_data, aes(x=group, y=mean_bre, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# BCG
#
#
# PDT <- ggplot(my_data, aes(x=group, y=log_pdt, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# PDT
PDT_rain<-ggplot(my_data,aes(x=group,y=log_pdt,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_pdt, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_pdt, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=log_pdt), outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab('Cents (log-transformed)')+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = 'black'))+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
ggtitle('a Pitch Discrimination Threshold ***')
PDT_rain
BCG_rain<-ggplot(my_data,aes(x=group,y=mean_bre,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_bcg, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_bcg, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=mean_bre),outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab("d'")+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12,face="italic"),
panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.y=element_blank())+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
# scale_colour_brewer(palette = "Greys")+
# scale_fill_brewer(palette = "Greys")+ # getting close, men den skal jo lige kunne ses...
ggtitle('b  Bimodal Compatibility Gain **')+
stat_compare_means(comparisons = c("Musicians", "Non-musicians"), label.y = 2.5)
BCG_rain
plot_grid(PDT_rain, BCG_rain, rel_widths= c(1.3, 1))
#plot_grid(PDT_rain, BCG_rain, labels = "AUTO", align= "v", hjust=c(-0.5, -3.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", hjust=c(-0.5, -0.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", label_x = 0.2)
ggsave("figure1.jpg", dpi=900)
ggsave("figure1.pdf")
citation("ggplot2")
citation("dplyr")
citation("plyr")
citation("devtools")
citation("tidyverse")
citation("ggpubr")
citation("rstatix")
citation("cowplot")
# BCG <- ggplot(my_data, aes(x=group, y=mean_bre, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# BCG
#
#
# PDT <- ggplot(my_data, aes(x=group, y=log_pdt, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# PDT
PDT_rain<-ggplot(my_data,aes(x=group,y=log_pdt,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_pdt, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_pdt, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=log_pdt), outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab('Cents (log-transformed)')+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = 'black'))+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
ggtitle('Pitch Discrimination Threshold ***')
PDT_rain
BCG_rain<-ggplot(my_data,aes(x=group,y=mean_bre,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_bcg, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_bcg, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=mean_bre),outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab("d'")+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12,face="italic"),
panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.y=element_blank())+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
# scale_colour_brewer(palette = "Greys")+
# scale_fill_brewer(palette = "Greys")+ # getting close, men den skal jo lige kunne ses...
ggtitle('Bimodal Compatibility Gain **')+
stat_compare_means(comparisons = c("Musicians", "Non-musicians"), label.y = 2.5)
BCG_rain
plot_grid(PDT_rain, BCG_rain, rel_widths= c(1.3, 1))
#plot_grid(PDT_rain, BCG_rain, labels = "AUTO", align= "v", hjust=c(-0.5, -3.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", hjust=c(-0.5, -0.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", label_x = 0.2)
ggsave("figure1.jpg", dpi=900)
ggsave("figure1.pdf")
citation("ggplot2")
citation("dplyr")
citation("plyr")
citation("devtools")
citation("tidyverse")
citation("ggpubr")
citation("rstatix")
citation("cowplot")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/au213911/Dropbox/Manuscripts/VisMod_DTI-paper/vismodDTI_manuscript/ScientificReports_Vismod_DTI_revision")
# knitr::opts_knit$set(root.dir = "~/Documents/postdoc/supervision/Cecilie_MÃ¸ller/DTI/Scientific_Reports")
# Library
library(ggplot2)
library(dplyr)
library(plyr)
# # install.packages("devtools")
library(devtools)
# library(car)
library(tidyverse)
library(ggpubr)
library(rstatix)
# # install.packages("cowplot")
library(cowplot)
devtools::source_gist("2a1bb0133ff568cbe28d", filename = "geom_flat_violin.R")
# BCG <- ggplot(my_data, aes(x=group, y=mean_bre, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# BCG
#
#
# PDT <- ggplot(my_data, aes(x=group, y=log_pdt, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# PDT
PDT_rain<-ggplot(my_data,aes(x=group,y=log_pdt,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_pdt, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_pdt, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=log_pdt), outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab('Cents (log-transformed)')+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = 'black'))+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
ggtitle('Pitch Discrimination Threshold ***')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/au213911/Dropbox/Manuscripts/VisMod_DTI-paper/vismodDTI_manuscript/ScientificReports_Vismod_DTI_revision")
# knitr::opts_knit$set(root.dir = "~/Documents/postdoc/supervision/Cecilie_MÃ¸ller/DTI/Scientific_Reports")
# Library
library(ggplot2)
library(dplyr)
library(plyr)
# # install.packages("devtools")
library(devtools)
# library(car)
library(tidyverse)
library(ggpubr)
library(rstatix)
# # install.packages("cowplot")
library(cowplot)
devtools::source_gist("2a1bb0133ff568cbe28d", filename = "geom_flat_violin.R")
# Import data
my_data = read.delim2("C:/Users/au213911/Dropbox/Manuscripts/VisMod_DTI-paper/vismodDTI_manuscript/ScientificReports_Vismod_DTI_revision/vismod_BCG_PDT_for_raincloud.txt",sep = "")
my_data$group[my_data$group ==0] = "Non-musicians"
my_data$group[my_data$group ==1] = "Musicians"
my_data[,"group"] <- factor(my_data[,"group"])
str(my_data)
# Exclude chance performers (nm25 and nm 08), NAs and pilot
my_data<-my_data[!is.na(my_data$log_pdt),]
my_data<-my_data[!my_data$id_experiment=="08nm",]
my_data<-my_data[!my_data$id_experiment=="25nm",]
# calculate 95% CI
lb <- function(x) mean(x) - qnorm(0.975)*(sd(x)/sqrt(length(x)))
ub <- function(x) mean(x) + qnorm(0.975)*(sd(x)/sqrt(length(x)))
# lb <- function(x) mean(x) - sd(x)
# ub <- function(x) mean(x) + sd(x)
sumld_bcg = ddply(my_data, ~group,  summarise, mean = mean(mean_bre), lower = lb(mean_bre), upper = ub(mean_bre))
sumld_pdt = ddply(my_data, ~group,  summarise, mean = mean(log_pdt), lower = lb(log_pdt), upper = ub(log_pdt))
head(sumld_bcg)
head(sumld_pdt)
# BCG <- ggplot(my_data, aes(x=group, y=mean_bre, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# BCG
#
#
# PDT <- ggplot(my_data, aes(x=group, y=log_pdt, fill=group)) + # fill=name allow to automatically dedicate a color for each group
#   geom_violin()
# PDT
PDT_rain<-ggplot(my_data,aes(x=group,y=log_pdt,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_pdt, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_pdt, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=log_pdt), outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab('Cents (log-transformed)')+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = 'black'))+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
ggtitle('Pitch Discrimination Threshold ***')
PDT_rain
BCG_rain<-ggplot(my_data,aes(x=group,y=mean_bre,fill=group,colour=group))+
geom_flat_violin(position=position_nudge(x=.25,y=0),adjust=2,trim=FALSE)+
geom_point(position=position_jitter(width=.15),size=1.5)+
geom_point(data = sumld_bcg, aes(x = group, y = mean), position = position_nudge(x = 0.25), size = 3, colour="BLACK") +
geom_errorbar(data = sumld_bcg, aes(ymin = lower, ymax = upper, y = mean), position = position_nudge(x = 0.25), width = 0.05, size = 0.5, colour="BLACK") +
# geom_boxplot(aes(x=as.numeric(group)+0.25,y=mean_bre),outlier.shape=NA,alpha=0.3,width=.1,colour="BLACK")+
ylab("d'")+xlab('')+coord_flip()+guides(fill=FALSE,colour=FALSE)+
theme(plot.title=element_text(size=16, hjust = 0.5), axis.text=element_text(size=12), axis.title=element_text(size=12,face="italic"),
panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text.y=element_blank())+
scale_fill_grey(start = 0.7, end = 0.4)+
scale_color_grey(start = 0.7, end = 0.4)+
# scale_colour_brewer(palette = "Greys")+
# scale_fill_brewer(palette = "Greys")+ # getting close, men den skal jo lige kunne ses...
ggtitle('Bimodal Compatibility Gain **')+
stat_compare_means(comparisons = c("Musicians", "Non-musicians"), label.y = 2.5)
BCG_rain
plot_grid(PDT_rain, BCG_rain, rel_widths= c(1.3, 1))
#plot_grid(PDT_rain, BCG_rain, labels = "AUTO", align= "v", hjust=c(-0.5, -3.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", hjust=c(-0.5, -0.5), vjust = 1)
# plot_grid(PDT_rain, BCG_rain, labels = "auto", align= "v", label_x = 0.2)
ggsave("figure1.jpg", dpi=900)
ggsave("figure1.pdf")
citation("ggplot2")
citation("dplyr")
citation("plyr")
citation("devtools")
citation("tidyverse")
citation("ggpubr")
citation("rstatix")
citation("cowplot")
my_data$log_pdt[my_data$group == "Non-musicians"]
sort(my_data$log_pdt[my_data$group == "Non-musicians"])
test = sort(my_data$log_pdt[my_data$group == "Non-musicians"])
test[18:28]
test = my_data[my_data$log_pdt < 3.5]
test = sort(my_data$log_pdt[my_data$group == "Non-musicians", ])
test = my_data[my_data$log_pdt < 3.5, ]
summary(test)
pdt_match = my_data[my_data$log_pdt < 3.5, ]
# Test for normality
shapiro.test(pdt_match[pdt_match$group=="Musicians",]$log_pdt)
shapiro.test(pdt_match[pdt_match$group=="Musicians",]$mean_bre)
shapiro.test(pdt_match[pdt_match$group=="Non-musicians",]$log_pdt)
shapiro.test(pdt_match[pdt_match$group=="Non-musicians",]$mean_bre)
bartlett.test(mean_bre ~ group, data = pdt_match)
bartlett.test(log_pdt ~ group, data = pdt_match)
# double check
# var.test(pdt_match[pdt_match$group==1,]$log_pdt, pdt_match[pdt_match$group==0,]$log_pdt)
# var.test(pdt_match[pdt_match$group==1,]$mean_bre, pdt_match[pdt_match$group==0,]$mean_bre)
stat.test_PDT <- pdt_match %>%
t_test(log_pdt ~ group) %>%
add_significance()
stat.test_PDT
stat.test_BCG <- pdt_match %>%
t_test(mean_bre ~ group) %>%
add_significance()
stat.test_BCG
?wilcox_test
stat.test_PDT <- pdt_match %>%
# t_test(log_pdt ~ group) %>%
wilcox_test(mean_bre ~ group) %>%
add_significance()
stat.test_PDT
stat.test_BCG <- pdt_match %>%
# t_test(mean_bre ~ group) %>%
wilcox_test(mean_bre ~ group) %>%
add_significance()
stat.test_BCG
stat.test_PDT <- pdt_match %>%
# t_test(log_pdt ~ group) %>%
wilcox_test(log_pdt ~ group) %>%
add_significance()
stat.test_PDT
stat.test_BCG <- pdt_match %>%
# t_test(mean_bre ~ group) %>%
wilcox_test(mean_bre ~ group) %>%
add_significance()
stat.test_BCG
stat.test_PDT <- pdt_match %>%
t_test(log_pdt ~ group) %>%
# wilcox_test(log_pdt ~ group) %>%
add_significance()
stat.test_PDT
stat.test_BCG <- pdt_match %>%
t_test(mean_bre ~ group) %>%
# wilcox_test(mean_bre ~ group) %>%
add_significance()
stat.test_BCG
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)
match_scatter
all_scatter<-ggplot(my_data,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)
all_scatter
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)
match_scatter
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)+
xlabel("PDT (log-transformed")+
ylabel("BCG")
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)+
xlab("PDT (log-transformed")+
ylab("BCG (in cents)")
match_scatter
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)+
xlab("PDT (log-transformed")+
ylab("BCG (in cents)")
match_scatter
ggsave()
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)+
xlab("PDT (log-transformed")+
ylab("BCG (in cents)")
match_scatter
ggsave("figure S6")
match_scatter
getwd()
match_scatter<-ggplot(pdt_match,aes(x=log_pdt,y=mean_bre,fill=group,colour=group))+
geom_point()+
geom_smooth(method=lm)+
xlab("PDT (log-transformed)")+
ylab("BCG (in cents)")
match_scatter
match_scatter
ratioDataSharing <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
View(ratioDataSharing)
View(ratioDataSharing)
View(ratioDataSharing)
hep<-ratioDataSharing
hep[Age]
hep[,Age]
hep$Age
hep$Age == hep$Age+1
class(hep$Age)
hep$Age <- hep$Age+1
hep$Age
hep$Age <- hep$Age-1
hep$Age
hep %>%
rename(
OLLEN = Ollen,
)
library(tidyverse)
hep %>%
rename(
OLLEN = Ollen,
)
View(hep)
hep %>%
rename(OLLEN = Ollen)
hep %>%
rename(OLLEN = OLLEN)
hep %>%
rename(Ollen = OLLEN)
View(ratioDataSharing)
View(hep)
hep
View(ratioDataSharing)
View(hep)
colnames(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen"
hep[range]<-hep$+1
hep[range]<-hep$Age+1
hep$range<-hep$Age+1
colnames(hep)
class(hep$range)
as.string(hep$range)
paste("A", 1:6, sep = "")
paste("A", 1:6, sep = "-")
paste(hep$Age, hep$range, sep = "-")
hep$Age<-paste(hep$Age, hep$range, sep = "-")
ratio_raw_data<-subset(hep, select = -range)
View(ratio_raw_data)
View(ratio_raw_data)
ratioDataSharing <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
View(ratioDataSharing)
View(hep)
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
View(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen"
hep$range<-hep$Age+1
hep$Age<-paste(hep$Age, hep$range, sep = "-")
ratio_raw_data<-subset(hep, select = -range)
View(ratio_raw_data)
View(hep)
View(hep)
write.csv(ratio_raw_data, file = "./ratio_raw_data.csv")
ratio_raw_data <- read.csv("~/ratio_raw_data.csv")
View(ratio_raw_data)
View(ratio_raw_data)
View(ratio_raw_data)
View(ratioDataSharing)
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/pitchDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/tempoDataSharing.csv")
View(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen"
hep$range<-hep$Age+1
hep$Age<-paste(hep$Age, hep$range, sep = "-")
ratio_raw_data<-subset(hep, select = -range)
write.csv(ratio_raw_data, file = "./ratio_raw_data.csv")
write.csv(ratio_raw_data, file = "./ratio_raw_data.csv",row.names = FALSE)
ratio_raw_data <- read.csv("~/ratio_raw_data.csv")
View(ratio_raw_data)
View(ratio_raw_data)
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/pitchDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/tempoDataSharing.csv")
View(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen_mus_rank"
hep$range<-hep$Age+1
hep$Age<-paste(hep$Age, hep$range, sep = "-")
ratio_raw_data<-subset(hep, select = -range)
write.csv(ratio_raw_data, file = "./ratio_raw_data.csv",row.names = FALSE)
ratio_raw_data <- read.csv("~/ratio_raw_data.csv")
View(ratio_raw_data)
hep <- re
hep <- re
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/pitchDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/tempoDataSharing.csv")
# View(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen_Mus_Rank"
hep$range<-hep$Age+1
hep$Age<-paste(hep$Age, hep$range, sep = "-")
ratio_raw_data<-subset(hep, select = -range)
write.csv(ratio_raw_data, file = "./ratio_raw_data.csv",row.names = FALSE)
ratio_raw_data <- read.csv("~/ratio_raw_data.csv")
View(ratio_raw_data)
# write.csv(ratio_raw_data, file = "ratio_raw_data.csv",row.names = FALSE)
write.csv(ratio_raw_data, file = "ratio_raw_data.csv",row.names = FALSE)
write.csv(ratio_raw_data, file = "ratio_raw_data.csv",row.names = FALSE)
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/pitchDataSharing.csv")
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/tempoDataSharing.csv")
# View(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen_Mus_Rank"
hep$range<-hep$Age+1
hep$Age<-paste(hep$Age, hep$range, sep = "-")
pitch_raw_data<-subset(hep, select = -range)
write.csv(pitch_raw_data, file = "./pitch_raw_data.csv",row.names = FALSE)
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/tempoDataSharing.csv")
# View(hep)
names(hep)[names(hep) == "OLLEN"] <- "Ollen_Mus_Rank"
hep$range<-hep$Age+1
hep$Age<-paste(hep$Age, hep$range, sep = "-")
tempo_raw_data<-subset(hep, select = -range)
write.csv(tempo_raw_data, file = "./tempo_raw_data.csv",row.names = FALSE)
tempo_raw_data <- read.csv("~/tempo_raw_data.csv")
View(tempo_raw_data)
pitch_raw_data <- read.csv("~/pitch_raw_data.csv")
View(pitch_raw_data)
View(pitch_raw_data)
View(pitch_raw_data)
# hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/ratioDataSharing.csv")
hep <- read.csv("C:/Users/au213911/Dropbox/Manuscripts/poly_online_manus/PLOSone/pitchDataSharing.csv")
View(hep)
scored_data <- read.csv("C:/Users/au213911/Downloads/scored_data.csv")
View(scored_data)
?par
library(swirl)
swirl()
install_course("R Programming")
main()
swirl()
TRUE==TRUE
FALSE == TRUE) == FALSE
(FALSE == TRUE) == FALSE
6==7
nxt()
info()
skip()
skip()
skip()
skip()
shiny::runApp(".")
shiny::runApp(".")
setwd("~/musbeat")
setwd("~/musbeat")
shiny::runApp(".")
